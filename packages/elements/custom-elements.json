{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/date-utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "formatDateForInput",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "date",
              "type": {
                "text": "Date"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formatDateForInput",
          "declaration": {
            "name": "formatDateForInput",
            "module": "src/date-utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/form-field-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormFieldController",
          "members": [
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement | undefined"
              }
            },
            {
              "kind": "method",
              "name": "closestElement",
              "parameters": [
                {
                  "name": "selector",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "handleFormData",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FormDataEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFormSubmit",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFormReset",
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormFieldController",
          "declaration": {
            "name": "FormFieldController",
            "module": "src/form-field-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/holo-hash-property.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hashState"
        },
        {
          "kind": "function",
          "name": "hashProperty",
          "return": {
            "type": {
              "text": "PropertyDeclaration<object | null, unknown>"
            }
          },
          "parameters": [
            {
              "name": "attributeName",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hashState",
          "declaration": {
            "name": "hashState",
            "module": "src/holo-hash-property.ts"
          }
        },
        {
          "kind": "js",
          "name": "hashProperty",
          "declaration": {
            "name": "hashProperty",
            "module": "src/holo-hash-property.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/icon.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "wrapPathInSvg",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "wrapPathInSvgWithoutPrefix",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrapPathInSvg",
          "declaration": {
            "name": "wrapPathInSvg",
            "module": "src/icon.ts"
          }
        },
        {
          "kind": "js",
          "name": "wrapPathInSvgWithoutPrefix",
          "declaration": {
            "name": "wrapPathInSvgWithoutPrefix",
            "module": "src/icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/image.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeAndExport",
          "parameters": [
            {
              "name": "img",
              "type": {
                "text": "HTMLImageElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeAndExport",
          "declaration": {
            "name": "resizeAndExport",
            "module": "src/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./shared-styles.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./form-field-controller.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./on-submit.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./holo-hash-property.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./icon.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./notify.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./date-utils.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/notify.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "notify",
          "parameters": [
            {
              "name": "message",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "variant",
              "default": "\"primary\""
            },
            {
              "name": "iconPath",
              "default": "mdiInformationOutline",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "duration",
              "default": "3000"
            }
          ]
        },
        {
          "kind": "function",
          "name": "notifyError",
          "parameters": [
            {
              "name": "message",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "notify",
          "declaration": {
            "name": "notify",
            "module": "src/notify.ts"
          }
        },
        {
          "kind": "js",
          "name": "notifyError",
          "declaration": {
            "name": "notifyError",
            "module": "src/notify.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/on-submit.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "serialize",
          "parameters": [
            {
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              }
            }
          ],
          "description": "Serializes a form and returns a plain object. If a form control with the same name appears more than once, the\nproperty will be converted to an array."
        },
        {
          "kind": "variable",
          "name": "onSubmit"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "serialize",
          "declaration": {
            "name": "serialize",
            "module": "src/on-submit.ts"
          }
        },
        {
          "kind": "js",
          "name": "onSubmit",
          "declaration": {
            "name": "onSubmit",
            "module": "src/on-submit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shared-styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "sharedStyles",
          "type": {
            "text": "array"
          },
          "default": "[\n  css`\n    .row {\n      display: flex;\n      flex-direction: row;\n    }\n    .column {\n      display: flex;\n      flex-direction: column;\n    }\n    .small-margin {\n      margin-top: 6px;\n    }\n    .big-margin {\n      margin-top: 23px;\n    }\n\n    .fill {\n      flex: 1;\n      height: 100%;\n    }\n\n    .title {\n      font-size: 20px;\n    }\n\n    .center-content {\n      align-items: center;\n      justify-content: center;\n    }\n\n    .placeholder {\n      color: var(--sl-color-gray-700);\n    }\n\n    .flex-scrollable-parent {\n      position: relative;\n      display: flex;\n      flex: 1;\n    }\n\n    .flex-scrollable-container {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n\n    .flex-scrollable-x {\n      max-width: 100%;\n      overflow-x: auto;\n    }\n    .flex-scrollable-y {\n      max-height: 100%;\n      overflow-y: auto;\n    }\n    :host {\n      color: var(--sl-color-neutral-1000);\n    }\n\n    sl-card {\n      display: flex;\n    }\n    sl-card::part(base) {\n      flex: 1;\n    }\n    sl-card::part(body) {\n      display: flex;\n      flex: 1;\n    }\n    sl-drawer::part(body) {\n      display: flex;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sharedStyles",
          "declaration": {
            "name": "sharedStyles",
            "module": "src/shared-styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/display-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DisplayError",
          "members": [
            {
              "kind": "field",
              "name": "tooltip",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "iconSize",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_iconSize"
            },
            {
              "kind": "method",
              "name": "renderIcon"
            },
            {
              "kind": "method",
              "name": "renderFull"
            },
            {
              "kind": "method",
              "name": "renderTooltip"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DisplayError",
          "declaration": {
            "name": "DisplayError",
            "module": "src/elements/display-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/holo-identicon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HoloIdenticon",
          "members": [
            {
              "kind": "field",
              "name": "hash",
              "type": {
                "text": "HoloHash"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the identicon in pixels."
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "\"square\" | \"circle\""
              },
              "default": "\"circle\"",
              "description": "Shape of the identicon."
            },
            {
              "kind": "field",
              "name": "disableTooltip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables showing the tooltip for the hash"
            },
            {
              "kind": "field",
              "name": "disableCopy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable copying of the hash on click"
            },
            {
              "kind": "field",
              "name": "_canvas",
              "type": {
                "text": "HTMLCanvasElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_tooltip",
              "type": {
                "text": "SlTooltip"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "justCopiedHash",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "copyHash"
            },
            {
              "kind": "field",
              "name": "strHash"
            },
            {
              "kind": "method",
              "name": "renderCanvas"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HoloIdenticon",
          "declaration": {
            "name": "HoloIdenticon",
            "module": "src/elements/holo-identicon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/select-avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SelectAvatar",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"avatar\""
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "\"circle\" | \"square\" | \"rounded\""
              },
              "default": "\"circle\""
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "_avatarFilePicker",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_errorInput",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_controller",
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "onAvatarUploaded"
            },
            {
              "kind": "method",
              "name": "renderAvatar"
            }
          ],
          "events": [
            {
              "name": "avatar-selected",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectAvatar",
          "declaration": {
            "name": "SelectAvatar",
            "module": "src/elements/select-avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/sl-datetime-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SlDatetimeInput",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "Date | number | string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "Date | number | string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "Date | number | string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "dateField",
              "type": {
                "text": "SlInput"
              }
            },
            {
              "kind": "field",
              "name": "timeField",
              "type": {
                "text": "SlInput"
              }
            },
            {
              "kind": "field",
              "name": "_controller",
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "method",
              "name": "toDate",
              "parameters": [
                {
                  "name": "d",
                  "type": {
                    "text": "Date | string | number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SlDatetimeInput",
          "declaration": {
            "name": "SlDatetimeInput",
            "module": "src/elements/sl-datetime-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/sl-textarea-prosemirror.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "watch",
          "parameters": [
            {
              "name": "propertyName",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "WatchOptions"
              }
            }
          ],
          "description": "Runs when observed properties change, e.g. @property or @state, but before the component updates. To wait for an\nupdate to complete after a change occurs, use `await this.updateComplete` in the handler. To start watching after the\ninitial update/render, use `{ waitUntilFirstUpdate: true }` or `this.hasUpdated` in the handler.\n\nUsage:"
        },
        {
          "kind": "variable",
          "name": "styles",
          "default": "css`\n  :host {\n    box-sizing: border-box;\n  }\n\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: inherit;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n\n  :host {\n    display: block;\n  }\n  .form-control .form-control__label {\n    display: none;\n  }\n\n  .form-control .form-control__help-text {\n    display: none;\n  }\n\n  /* Label */\n  .form-control--has-label .form-control__label {\n    display: inline-block;\n    color: var(--sl-input-label-color);\n    margin-bottom: var(--sl-spacing-3x-small);\n  }\n\n  .form-control--has-label.form-control--small .form-control__label {\n    font-size: var(--sl-input-label-font-size-small);\n  }\n\n  .form-control--has-label.form-control--medium .form-control__label {\n    font-size: var(--sl-input-label-font-size-medium);\n  }\n\n  .form-control--has-label.form-control--large .form-control__label {\n    font-size: var(--sl-input-label-font-size-large);\n  }\n\n  :host([required]) .form-control--has-label .form-control__label::after {\n    content: var(--sl-input-required-content);\n    margin-inline-start: var(--sl-input-required-content-offset);\n    color: var(--sl-input-required-content-color);\n  }\n\n  /* Help text */\n  .form-control--has-help-text .form-control__help-text {\n    display: block;\n    color: var(--sl-input-help-text-color);\n    margin-top: var(--sl-spacing-3x-small);\n  }\n\n  .form-control--has-help-text.form-control--small .form-control__help-text {\n    font-size: var(--sl-input-help-text-font-size-small);\n  }\n\n  .form-control--has-help-text.form-control--medium .form-control__help-text {\n    font-size: var(--sl-input-help-text-font-size-medium);\n  }\n\n  .form-control--has-help-text.form-control--large .form-control__help-text {\n    font-size: var(--sl-input-help-text-font-size-large);\n  }\n\n  .form-control--has-help-text.form-control--radio-group\n    .form-control__help-text {\n    margin-top: var(--sl-spacing-2x-small);\n  }\n\n  .textarea {\n    display: flex;\n    align-items: center;\n    position: relative;\n    width: 100%;\n    font-family: var(--sl-input-font-family);\n    font-weight: var(--sl-input-font-weight);\n    line-height: var(--sl-line-height-normal);\n    letter-spacing: var(--sl-input-letter-spacing);\n    vertical-align: middle;\n    transition: var(--sl-transition-fast) color,\n      var(--sl-transition-fast) border, var(--sl-transition-fast) box-shadow,\n      var(--sl-transition-fast) background-color;\n    cursor: text;\n  }\n\n  /* Standard textareas */\n  .textarea--standard {\n    background-color: var(--sl-input-background-color);\n    border: solid var(--sl-input-border-width) var(--sl-input-border-color);\n  }\n\n  .textarea--standard:hover:not(.textarea--disabled) {\n    background-color: var(--sl-input-background-color-hover);\n    border-color: var(--sl-input-border-color-hover);\n  }\n  .textarea--standard:hover:not(.textarea--disabled) .textarea__control {\n    color: var(--sl-input-color-hover);\n  }\n\n  .textarea--standard.textarea--focused:not(.textarea--disabled) {\n    background-color: var(--sl-input-background-color-focus);\n    border-color: var(--sl-input-border-color-focus);\n    color: var(--sl-input-color-focus);\n    box-shadow: 0 0 0 var(--sl-focus-ring-width)\n      var(--sl-input-focus-ring-color);\n  }\n\n  .textarea--standard.textarea--focused:not(.textarea--disabled)\n    .textarea__control {\n    color: var(--sl-input-color-focus);\n  }\n\n  .textarea--standard.textarea--disabled {\n    background-color: var(--sl-input-background-color-disabled);\n    border-color: var(--sl-input-border-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .textarea--standard.textarea--disabled .textarea__control {\n    color: var(--sl-input-color-disabled);\n  }\n\n  .textarea--standard.textarea--disabled .textarea__control::placeholder {\n    color: var(--sl-input-placeholder-color-disabled);\n  }\n\n  /* Filled textareas */\n  .textarea--filled {\n    border: none;\n    background-color: var(--sl-input-filled-background-color);\n    color: var(--sl-input-color);\n  }\n\n  .textarea--filled:hover:not(.textarea--disabled) {\n    background-color: var(--sl-input-filled-background-color-hover);\n  }\n\n  .textarea--filled.textarea--focused:not(.textarea--disabled) {\n    background-color: var(--sl-input-filled-background-color-focus);\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .textarea--filled.textarea--disabled {\n    background-color: var(--sl-input-filled-background-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .textarea__control {\n    flex: 1 1 auto;\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: inherit;\n    line-height: 1.4;\n    color: var(--sl-input-color);\n    border: none;\n    background: none;\n    box-shadow: none;\n    cursor: inherit;\n    -webkit-appearance: none;\n  }\n\n  .textarea__control::-webkit-search-decoration,\n  .textarea__control::-webkit-search-cancel-button,\n  .textarea__control::-webkit-search-results-button,\n  .textarea__control::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n  }\n\n  .textarea__control::placeholder {\n    color: var(--sl-input-placeholder-color);\n    user-select: none;\n  }\n\n  .textarea__control:focus {\n    outline: none;\n  }\n\n  /*\n   * Size modifiers\n   */\n\n  .textarea--small {\n    border-radius: var(--sl-input-border-radius-small);\n    font-size: var(--sl-input-font-size-small);\n  }\n\n  .textarea--small .textarea__control {\n    padding: 0.5em var(--sl-input-spacing-small);\n  }\n\n  .textarea--medium {\n    border-radius: var(--sl-input-border-radius-medium);\n    font-size: var(--sl-input-font-size-medium);\n  }\n\n  .textarea--medium .textarea__control {\n    padding: 0.5em var(--sl-input-spacing-medium);\n  }\n\n  .textarea--large {\n    border-radius: var(--sl-input-border-radius-large);\n    font-size: var(--sl-input-font-size-large);\n  }\n\n  .textarea--large .textarea__control {\n    padding: 0.5em var(--sl-input-spacing-large);\n  }\n\n  /*\n   * Resize types\n   */\n\n  .textarea--resize-none .textarea__control {\n    resize: none;\n  }\n\n  .textarea--resize-vertical .textarea__control {\n    resize: vertical;\n  }\n\n  .textarea--resize-auto .textarea__control {\n    height: auto;\n    resize: none;\n    overflow-y: hidden;\n  }\n\n  p {\n    margin: 0 !important;\n    font-size: var(--sl-input-font-size-medium);\n  }\n  .textarea__control {\n    height: 105px;\n    overflow-y: auto;\n  }\n  .ProseMirror {\n    outline: none;\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    white-space: break-spaces;\n  }\n`"
        },
        {
          "kind": "class",
          "description": "",
          "name": "SlTextareaProsemirror",
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The name of the textarea, submitted as a name/value pair with form data."
            },
            {
              "kind": "field",
              "name": "value"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"small\" | \"medium\" | \"large\""
              },
              "default": "\"medium\"",
              "description": "The textarea's size."
            },
            {
              "kind": "field",
              "name": "filled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Draws a filled textarea."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The textarea's label. If you need to display HTML, use the `label` slot instead."
            },
            {
              "kind": "field",
              "name": "helpText",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The textarea's help text. If you need to display HTML, use the `help-text` slot instead."
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Placeholder text to show as a hint when the input is empty."
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number"
              },
              "default": "4",
              "description": "The number of rows to display by default."
            },
            {
              "kind": "field",
              "name": "resize",
              "type": {
                "text": "\"none\" | \"vertical\" | \"auto\""
              },
              "default": "\"vertical\"",
              "description": "Controls how the textarea can be resized."
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the textarea."
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the textarea readonly."
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\nto place the form control outside of a form and associate it with the form that has this `id`. The form must be in\nthe same document or shadow root for this to work."
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the textarea a required field."
            },
            {
              "kind": "field",
              "name": "minlength",
              "type": {
                "text": "number"
              },
              "description": "The minimum length of input that will be considered valid."
            },
            {
              "kind": "field",
              "name": "maxlength",
              "type": {
                "text": "number"
              },
              "description": "The maximum length of input that will be considered valid."
            },
            {
              "kind": "field",
              "name": "autocapitalize",
              "type": {
                "text": "| \"off\"\n    | \"none\"\n    | \"on\"\n    | \"sentences\"\n    | \"words\"\n    | \"characters\""
              },
              "description": "Controls whether and how text input is automatically capitalized as it is entered by the user."
            },
            {
              "kind": "field",
              "name": "autocorrect",
              "type": {
                "text": "string"
              },
              "description": "Indicates whether the browser's autocorrect feature is on or off."
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "description": "Specifies what permission the browser has to provide assistance in filling out form field values. Refer to\n[this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for available values."
            },
            {
              "kind": "field",
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "description": "Indicates that the input should receive focus on page load."
            },
            {
              "kind": "field",
              "name": "enterkeyhint",
              "type": {
                "text": "| \"enter\"\n    | \"done\"\n    | \"go\"\n    | \"next\"\n    | \"previous\"\n    | \"search\"\n    | \"send\""
              },
              "description": "Used to customize the label or icon of the Enter key on virtual keyboards."
            },
            {
              "kind": "field",
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Enables spell checking on the textarea."
            },
            {
              "kind": "field",
              "name": "inputmode",
              "type": {
                "text": "| \"none\"\n    | \"text\"\n    | \"decimal\"\n    | \"numeric\"\n    | \"tel\"\n    | \"search\"\n    | \"email\"\n    | \"url\""
              },
              "description": "Tells the browser what type of data will be entered by the user, allowing it to display the appropriate virtual\nkeyboard on supportive devices."
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The default value of the form control. Primarily used for resetting the form control."
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "EditorState"
              }
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "EditorView"
              }
            },
            {
              "kind": "method",
              "name": "editorStateConfig"
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setTextareaHeight",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Sets focus on the textarea."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Removes focus from the textarea."
            },
            {
              "kind": "method",
              "name": "scrollPosition",
              "return": {
                "type": {
                  "text": "{ top: number; left: number } | undefined"
                }
              },
              "parameters": [
                {
                  "name": "position",
                  "optional": true,
                  "type": {
                    "text": "{\n    top?: number;\n    left?: number;\n  }"
                  }
                }
              ],
              "description": "Gets or sets the textarea's scroll position."
            },
            {
              "kind": "method",
              "name": "setSelectionRange",
              "parameters": [
                {
                  "name": "selectionStart",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionEnd",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionDirection",
                  "default": "\"none\"",
                  "type": {
                    "text": "\"forward\" | \"backward\" | \"none\""
                  }
                }
              ],
              "description": "Sets the start and end positions of the text selection (0-based)."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Gets the associated form, if one exists."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "description": "Checks for validity and shows the browser's validation message if the control is invalid."
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "field",
              "name": "_errorInput",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "watch",
          "declaration": {
            "name": "watch",
            "module": "src/elements/sl-textarea-prosemirror.ts"
          }
        },
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/elements/sl-textarea-prosemirror.ts"
          }
        },
        {
          "kind": "js",
          "name": "SlTextareaProsemirror",
          "declaration": {
            "name": "SlTextareaProsemirror",
            "module": "src/elements/sl-textarea-prosemirror.ts"
          }
        }
      ]
    }
  ]
}
